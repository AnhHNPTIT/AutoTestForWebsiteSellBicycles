<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="4" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-29T21:29:48 ICT" name="Suite" finished-at="2022-12-29T21:30:17 ICT" duration-ms="28816">
    <groups>
    </groups>
    <test started-at="2022-12-29T21:29:48 ICT" name="Test1" finished-at="2022-12-29T21:30:17 ICT" duration-ms="28816">
      <class name="TestSuite.Register">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:48 ICT" name="beforeSuite" finished-at="2022-12-29T21:29:48 ICT" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:48 ICT" name="beforeClass" finished-at="2022-12-29T21:29:48 ICT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:48 ICT" name="setUpClass" finished-at="2022-12-29T21:29:56 ICT" duration-ms="8080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:56 ICT" name="setUpMethod" finished-at="2022-12-29T21:29:56 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_01() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="MODULE4_01()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:56 ICT" name="MODULE4_01" finished-at="2022-12-29T21:29:57 ICT" duration-ms="893" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Vui lòng nhập email của bạn"; Actual: "Email không đúng định dạng!"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Vui lòng nhập email của bạn"; Actual: "Email không đúng định dạng!"
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:455)
at Common.Utilities.assertTextValue(Utilities.java:390)
at Common.Utilities.assertTextValueVisible(Utilities.java:402)
at CommonScreen.HomeScreen.register(HomeScreen.java:63)
at TestSuite.Register.MODULE4_01(Register.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_01 -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:57 ICT" name="tearDownMethod" finished-at="2022-12-29T21:29:58 ICT" duration-ms="1455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_01 status=FAILURE method=Register.MODULE4_01()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_01() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:58 ICT" name="afterMethod" finished-at="2022-12-29T21:29:58 ICT" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_01 status=FAILURE method=Register.MODULE4_01()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_01() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:58 ICT" name="setUpMethod" finished-at="2022-12-29T21:29:58 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_02() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="MODULE4_02()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:58 ICT" name="MODULE4_02" finished-at="2022-12-29T21:29:59 ICT" duration-ms="898" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Cảm ơn bạn đã đăng ký nhận thông báo"; Actual: "Cảm ơn bạn đã đăng kí nhận thông tin từ Medica!"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Cảm ơn bạn đã đăng ký nhận thông báo"; Actual: "Cảm ơn bạn đã đăng kí nhận thông tin từ Medica!"
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:455)
at Common.Utilities.assertTextValue(Utilities.java:390)
at Common.Utilities.assertTextValueVisible(Utilities.java:402)
at CommonScreen.HomeScreen.register(HomeScreen.java:63)
at TestSuite.Register.MODULE4_02(Register.java:36)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_02 -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:29:59 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:01 ICT" duration-ms="1317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_02 status=FAILURE method=Register.MODULE4_02()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_02() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:01 ICT" name="afterMethod" finished-at="2022-12-29T21:30:01 ICT" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_02 status=FAILURE method=Register.MODULE4_02()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_02() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:01 ICT" name="setUpMethod" finished-at="2022-12-29T21:30:01 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_03() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="MODULE4_03()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:01 ICT" name="MODULE4_03" finished-at="2022-12-29T21:30:02 ICT" duration-ms="1011" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Cảm ơn bạn đã đăng ký nhận thông báo"; Actual: "Cảm ơn bạn đã đăng kí nhận thông tin từ Medica!"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Cảm ơn bạn đã đăng ký nhận thông báo"; Actual: "Cảm ơn bạn đã đăng kí nhận thông tin từ Medica!"
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:455)
at Common.Utilities.assertTextValue(Utilities.java:390)
at Common.Utilities.assertTextValueVisible(Utilities.java:402)
at CommonScreen.HomeScreen.register(HomeScreen.java:63)
at TestSuite.Register.MODULE4_03(Register.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_03 -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:02 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:03 ICT" duration-ms="1463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_03 status=FAILURE method=Register.MODULE4_03()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_03() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:03 ICT" name="afterMethod" finished-at="2022-12-29T21:30:03 ICT" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_03 status=FAILURE method=Register.MODULE4_03()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_03() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:03 ICT" name="setUpMethod" finished-at="2022-12-29T21:30:03 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_04() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="MODULE4_04()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:03 ICT" name="MODULE4_04" finished-at="2022-12-29T21:30:04 ICT" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_04 -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:04 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:06 ICT" duration-ms="1437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_04 status=SUCCESS method=Register.MODULE4_04()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_04() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:06 ICT" name="afterMethod" finished-at="2022-12-29T21:30:06 ICT" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_04 status=SUCCESS method=Register.MODULE4_04()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_04() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MODULE4_05()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:06 ICT" name="MODULE4_05" finished-at="2022-12-29T21:30:07 ICT" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_05 -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:06 ICT" name="setUpMethod" finished-at="2022-12-29T21:30:06 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_05() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:07 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:08 ICT" duration-ms="1358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_05 status=SUCCESS method=Register.MODULE4_05()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_05() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:08 ICT" name="afterMethod" finished-at="2022-12-29T21:30:08 ICT" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_05 status=SUCCESS method=Register.MODULE4_05()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_05() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="MODULE4_06()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:08 ICT" name="MODULE4_06" finished-at="2022-12-29T21:30:09 ICT" duration-ms="1225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_06 -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:08 ICT" name="setUpMethod" finished-at="2022-12-29T21:30:08 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_06() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:09 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:11 ICT" duration-ms="1291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_06 status=SUCCESS method=Register.MODULE4_06()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_06() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:11 ICT" name="afterMethod" finished-at="2022-12-29T21:30:11 ICT" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_06 status=SUCCESS method=Register.MODULE4_06()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_06() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:11 ICT" name="setUpMethod" finished-at="2022-12-29T21:30:11 ICT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_07() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="MODULE4_07()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:11 ICT" name="MODULE4_07" finished-at="2022-12-29T21:30:12 ICT" duration-ms="731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_07 -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:12 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:13 ICT" duration-ms="1626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_07 status=SUCCESS method=Register.MODULE4_07()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_07() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:13 ICT" name="afterMethod" finished-at="2022-12-29T21:30:13 ICT" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_07 status=SUCCESS method=Register.MODULE4_07()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_07() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:13 ICT" name="setUpMethod" finished-at="2022-12-29T21:30:13 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_08() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="MODULE4_08()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:13 ICT" name="MODULE4_08" finished-at="2022-12-29T21:30:14 ICT" duration-ms="282" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "test@gmail.com"; Actual: "  test@gmail.com   "]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "test@gmail.com"; Actual: "  test@gmail.com   "
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:455)
at Common.Utilities.assertInputValue(Utilities.java:420)
at Common.Utilities.inputValueAndValidate(Utilities.java:302)
at CommonScreen.HomeScreen.register(HomeScreen.java:60)
at TestSuite.Register.MODULE4_08(Register.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MODULE4_08 -->
        <test-method is-config="true" signature="tearDownMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:14 ICT" name="tearDownMethod" finished-at="2022-12-29T21:30:15 ICT" duration-ms="1505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_08 status=FAILURE method=Register.MODULE4_08()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_08() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:15 ICT" name="afterMethod" finished-at="2022-12-29T21:30:15 ICT" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MODULE4_08 status=FAILURE method=Register.MODULE4_08()[pri:0, instance:TestSuite.Register@7e6f74c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.Register.MODULE4_08() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:TestSuite.Register@7e6f74c]" started-at="2022-12-29T21:30:15 ICT" name="tearDownClass" finished-at="2022-12-29T21:30:16 ICT" duration-ms="1076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- TestSuite.Register -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
